// Existing content unchanged...

// --- TrialBalanceExportService Implementation ---
@Service
public class TrialBalanceExportServiceImpl implements TrialBalanceExportService {

    @Override
    public byte[] exportToExcel(TrialBalanceResponse data) {
        try (Workbook workbook = new XSSFWorkbook()) {
            Sheet sheet = workbook.createSheet("Trial Balance");
            Row header = sheet.createRow(0);

            header.createCell(0).setCellValue("Account Code");
            header.createCell(1).setCellValue("Account Name");
            header.createCell(2).setCellValue("Debit");
            header.createCell(3).setCellValue("Credit");

            int rowIdx = 1;
            for (TrialBalanceDTO dto : data.getEntries()) {
                Row row = sheet.createRow(rowIdx++);
                row.createCell(0).setCellValue(dto.getAccountCode());
                row.createCell(1).setCellValue(dto.getAccountName());
                row.createCell(2).setCellValue(dto.getDebit().doubleValue());
                row.createCell(3).setCellValue(dto.getCredit().doubleValue());
            }

            ByteArrayOutputStream out = new ByteArrayOutputStream();
            workbook.write(out);
            return out.toByteArray();
        } catch (IOException e) {
            throw new RuntimeException("Failed to export Excel", e);
        }
    }

    @Override
    public byte[] exportToPdf(TrialBalanceResponse data) {
        try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {
            Document document = new Document();
            PdfWriter.getInstance(document, out);
            document.open();

            document.add(new Paragraph("Trial Balance Report"));
            PdfPTable table = new PdfPTable(4);
            table.addCell("Account Code");
            table.addCell("Account Name");
            table.addCell("Debit");
            table.addCell("Credit");

            for (TrialBalanceDTO dto : data.getEntries()) {
                table.addCell(dto.getAccountCode());
                table.addCell(dto.getAccountName());
                table.addCell(dto.getDebit().toPlainString());
                table.addCell(dto.getCredit().toPlainString());
            }

            document.add(table);
            document.close();
            return out.toByteArray();
        } catch (Exception e) {
            throw new RuntimeException("Failed to export PDF", e);
        }
    }
}



